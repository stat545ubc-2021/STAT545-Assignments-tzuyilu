* using log directory ‘/Users/ziyi/GoogleDrive_p/My Drive/PhD/1_STAT545/Assignments/functions-tzuyilu/Assignment_B-2/ExtractData.Rcheck’
* using R version 4.1.1 (2021-08-10)
* using platform: x86_64-apple-darwin17.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘ExtractData/DESCRIPTION’ ... OK
* this is package ‘ExtractData’ version ‘0.0.0.9000’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘ExtractData’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... WARNING
Non-standard license specification:
  `use_mit_license()`, `use_gpl3_license()` or friends to pick a
  license
Standardizable: FALSE
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... WARNING
'::' or ':::' imports not declared from:
  ‘dplyr’ ‘tidyr’
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
RegionSel: no visible global function definition for ‘%>%’
RegionSel: no visible binding for global variable ‘neighbourhood_name’
TreeAgeCal: no visible global function definition for ‘%>%’
TreeAgeCal: no visible binding for global variable ‘date_planted’
Undefined global functions or variables:
  %>% date_planted neighbourhood_name
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... NOTE
Rd file 'RegionSel.Rd':
  \examples lines wider than 100 characters:
     RegionSel(input_data,c("ARBUTUS-RIDGE","DUNBAR-SOUTHLANDS","KITSILANO","SHAUGHNESSY","WEST POINT GREY"))

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking examples ... ERROR
Running examples in ‘ExtractData-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RegionSel
> ### Title: Select targeted regions in the data
> ### Aliases: RegionSel
> 
> ### ** Examples
> 
> RegionSel(input_data,"ARBUTUS-RIDGE")
Error in is.data.frame(input_data) : object 'input_data' not found
Calls: RegionSel -> is.data.frame
Execution halted
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... ERROR
  Running ‘testthat.R’
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
   1. ├─testthat::expect_true(is.data.frame(VanTreeUBC)) test-RegionSel.R:2:2
   2. │ └─testthat::quasi_label(enquo(object), label, arg = "object")
   3. │   └─rlang::eval_bare(expr, quo_get_env(quo))
   4. └─base::is.data.frame(VanTreeUBC)
  ── Error (test-TreeAgeCal.R:2:3): Check no NAs and column class in the TreeAgeCal function. ──
  Error in `eval_bare(expr, quo_get_env(quo))`: object 'VanTreeUBC' not found
  Backtrace:
      █
   1. └─testthat::expect_equal(...) test-TreeAgeCal.R:2:2
   2.   └─testthat::quasi_label(enquo(object), label, arg = "object")
   3.     └─rlang::eval_bare(expr, quo_get_env(quo))
  
  [ FAIL 2 | WARN 0 | SKIP 0 | PASS 0 ]
  Error: Test failures
  Execution halted
* checking for non-standard things in the check directory ... OK
* checking for detritus in the temp directory ... OK
* DONE
Status: 2 ERRORs, 2 WARNINGs, 2 NOTEs
